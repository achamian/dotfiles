#+TITLE: Emacs Configuration
#+AUTHOR: Niranjan Paranjape

* Startup
** Performance

Change GC thrushold while starting emacs to improve initial load time. GC is set to sensible value after startup.

#+begin_src emacs-lisp
  (defvar best-gc-cons-threshold 4000000)
  (setq gc-cons-threshold most-positive-fixnum)
  (add-hook 'after-init-hook #'(lambda ()
                                 (setq gc-cons-threshold best-gc-cons-threshold)))

  (defun np/display-startup-time ()
      (message "Emacs loaded in %s with %d garbage collections."
               (format "%.2f seconds"
                       (float-time
                         (time-subtract after-init-time before-init-time)))
               gcs-done))

  (add-hook 'emacs-startup-hook #'np/display-startup-time)
#+end_src

** Start emacs maximized

#+begin_src emacs-lisp
  (add-to-list 'default-frame-alist '(fullscreen . maximized))
#+end_src

** Sensible defaults

#+begin_src emacs-lisp
  (setq coding-system-for-read 'utf-8)
  (setq coding-system-for-write 'utf-8)
  (setq initial-scratch-message "")
  (fset 'yes-or-no-p 'y-or-n-p)
  (setq custom-file (expand-file-name "~/.emacs.d/custom.el"))
  (setq ring-bell-function 'ignore)
#+end_src

** Disable =--dired= for =ls=

On macOS ls doesn't support =--dired= option while =linux= supports it. Disable it.

#+begin_src emacs-lisp
  (when (string= system-type "darwin")
    (setq dired-use-ls-dired nil))
#+end_src

** Configure environment

Load environment variables.

#+begin_src emacs-lisp
  (use-package load-env-vars
      :ensure t
      :init (load-env-vars "~/.profile"))
#+end_src

Get PATH variable from shell.

#+begin_src emacs-lisp
  (use-package exec-path-from-shell
      :ensure t
      :config (setq exec-path-from-shell-variables '("PATH"))
      :init
      (when (memq window-system '(mac ns x))
      (exec-path-from-shell-initialize)))
#+end_src

Load environment variables set using =direnv=.

#+begin_src emacs-lisp
  (use-package direnv
   :ensure t
   :config
   (direnv-mode))
#+end_src

* Configure Package

Always install package if it is not present on the system.

#+begin_src emacs-lisp
  (require 'use-package-ensure)
  (setq use-package-always-ensure t)
#+end_src

Frequently prompt to auto update packages.

#+begin_src emacs-lisp
  (use-package auto-package-update
    :custom
    (auto-package-update-interval 7)
    (auto-package-update-prompt-before-update t)
    (auto-package-update-hide-results t)
    :config
    (auto-package-update-maybe)
    (auto-package-update-at-time "09:00"))
#+end_src

Compile installed packages.

#+begin_src emacs-lisp
  (use-package auto-compile
    :config (auto-compile-on-load-mode))
#+end_src
